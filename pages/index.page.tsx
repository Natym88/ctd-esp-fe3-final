import type { GetServerSideProps, GetStaticProps, NextPage} from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import Home from './home/index.page';
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import { Comic } from 'model/comic';
import { useState } from 'react';
import { Button } from '@mui/material';
import { useRouter } from 'next/router';

interface Props {
    comics: Comic[];
}

const Index: NextPage<Props> = ({comics}) => {

    const router = useRouter();
    const cant = 12;
    const {queryOffset} = router.query
    let initialOffset;
    if(queryOffset) {
        initialOffset = parseInt(queryOffset.toString())
    } 
    const [offset, setOffset] = useState(initialOffset || 0);

    const handleOffsetChange = (newOffset: number) => {
        setOffset(newOffset);
        router.push(`/?offset=${newOffset}`)
    }

    return (
        <>
            <Head>
                <title>Comic Store</title>
                <meta name="Comics" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <BodySingle title={"Comics"}>
                <Home comics={comics}/>
                {offset != 0 &&
                    <Button onClick={() => handleOffsetChange(offset - cant)}>Anterior</Button>
                }
                <Button onClick= {() => handleOffsetChange(offset + cant)}>Siguiente</Button>
            </BodySingle>
        </>
    )
}

    
export const getServerSideProps: GetServerSideProps<Props> = async ({query}) => {

    const offset = query?.offset || '0';

    const comics = await getComics(parseInt(offset as string), parseInt(offset as string) + 12);    
    
    return {
      props: {
        comics: comics.data.results
      }
    };
  };


export default Index
